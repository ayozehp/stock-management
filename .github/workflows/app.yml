name: app

on:
  push:
    branches: [ main ]
    paths-ignore:
      - 'infrastructure/**'
      - '.github/workflows/registry.yml'
      - '.github/workflows/database.yml'
      - '.github/workflows/container.yml'

env:
  SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_DEFAULT_REGION: ${{ vars.AWS_DEFAULT_REGION }}

jobs:
  security:
    name: Run security checks
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - name: Run Snyk to check for vulnerabilities
        uses: snyk/actions/maven-3-jdk-22@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --severity-threshold=high
  compile:
    name: Run compilation
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - name: Set up JDK 22 for x64
        uses: actions/setup-java@v4
        with:
          java-version: '22'
          distribution: 'temurin'
      - name: Create war file
        run: mvn compile
  build:
    name: Build artefact
    runs-on: ubuntu-latest
    needs:
      - security
      - compile
    steps:
      - uses: actions/checkout@master
      - name: Set up JDK 22 for x64
        uses: actions/setup-java@v4
        with:
          java-version: '22'
          distribution: 'temurin'
      - name: Create war file
        run: mvn clean package
      - name: Create docker image
        run: docker build . -t ayozehp/stock-management
      - name: Run Snyk to check Docker image for vulnerabilities
        uses: snyk/actions/docker@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          image: ayozehp/stock-management
          args: --severity-threshold=high
      - name: Authenticate docker with ECR
        run: aws ecr get-login-password --region eu-north-1 | docker login --username AWS --password-stdin 968153380465.dkr.ecr.eu-north-1.amazonaws.com
      - name: Tag docker image
        run: docker tag ayozehp/stock-management 968153380465.dkr.ecr.eu-north-1.amazonaws.com/stock-management:$GITHUB_SHA
      - name: Publish image
        run: docker push 968153380465.dkr.ecr.eu-north-1.amazonaws.com/stock-management:$GITHUB_SHA
  deploy:
    name: Deploy application
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@master
      - uses: hashicorp/setup-terraform@v3
        name: Install Terraform
        with:
          terraform_version: 1.9.3
          terraform_wrapper: false
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}
      - id: apply_terraform
        name: Apply terraform
        run: |
          terraform -chdir=infrastructure/container init
          terraform -chdir=infrastructure/container apply \
            -var="name=stockManagement" \
            -var="repository=968153380465.dkr.ecr.eu-north-1.amazonaws.com/stock-management" \
            -var="tag=$GITHUB_SHA" \
            --auto-approve
