name: infrastructure

on:
  push:
    branches: [ main ]
    paths:
      - 'infrastructure/**'

env:
  TF_TOKEN_app_terraform_io: ${{ secrets.TF_TOKEN_APP_TERRAFORM_IO }}
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_DEFAULT_REGION: ${{ vars.AWS_DEFAULT_REGION }}

jobs:
  security:
    name: Run security checks
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - name: Run Snyk to check for vulnerabilities
        uses: snyk/actions/iac@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --severity-threshold=high

  test:
    name: Test registry infrastructure
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.9.3
          terraform_wrapper: false
      - run: |
          terraform init -backend=false
          terraform validate

  create-registry:
    name: Create artefact registry
    needs:
      - security
      - test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        name: Checkout code
      - uses: hashicorp/setup-terraform@v2
        name: Install Terraform
        with:
          terraform_version: 1.9.3
          terraform_wrapper: false
      - name: Apply terraform
        run: |          
          terraform -chdir=infrastructure init
          terraform -chdir=infrastructure apply -var-file="production.tfvars" --auto-approve
